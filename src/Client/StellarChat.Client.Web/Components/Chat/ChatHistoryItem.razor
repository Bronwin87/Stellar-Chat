@inject NavigationManager NavigationManager
@inject IChatService _chatService
@inject IDialogService _dialogService
@inject ChatState _chatState

<MudListItem OnClick="@NavigateToChat">
    <ChildContent>
        <div class="d-flex flex-row flex-grow-1 gap-4">
            <MudAvatar Size="@Size.Medium" Class="my-auto">
                <MudImage Src="https://avatars.githubusercontent.com/u/49451143?v=4"/>
            </MudAvatar>
            <MudText Typo="Typo.body1" Class="my-auto">@ChatSessionItem?.Title</MudText>
            <MudSpacer />
            <MudMenu Icon="@Icons.Material.Filled.MoreVert">
                <MudMenuItem OnClick="OpenChangeTitleDialog">Rename</MudMenuItem>
                <MudMenuItem OnClick="DeleteChat">Delete</MudMenuItem>
            </MudMenu>
        </div>
    </ChildContent>
</MudListItem>
<MudDivider />

@code
{
    [Parameter] public ChatSessionResponse? ChatSessionItem { get; set; }
    [Parameter] public EventCallback<ChatSessionResponse> OnDeleteChat { get; set; }
    [Parameter] public EventCallback<ChangeTitleInfo> OnChangeTitle { get; set; }

    private void NavigateToChat()
    {
        _chatState.SetChatId(ChatSessionItem!.Id);
        NavigationManager.NavigateTo($"/c/{ChatSessionItem.Id}");
    }

    private async Task DeleteChat() 
        => await OnDeleteChat.InvokeAsync(ChatSessionItem);

    private async Task OpenChangeTitleDialog()
    {
        var parameters = new DialogParameters();
        parameters.Add(nameof(ChatSessionItem), ChatSessionItem);

        var options = new DialogOptions { CloseOnEscapeKey = true };
        var dialog = _dialogService.Show<ChangeChatSessionTitleDialog>("Change title", parameters, options);

        var result = await dialog.Result;

        if (!result.Canceled)
        {
            var updatedTitle = result.Data as string;

            if (!string.IsNullOrEmpty(updatedTitle))
            {
                var changeTitleInfo = new ChangeTitleInfo(ChatSessionItem!.Id, updatedTitle);
                await OnChangeTitle.InvokeAsync(changeTitleInfo);
            }
        }
    }
}
